# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions: write-all
    strategy:
      matrix:
        dotnet-version: [ '8.x' ]

    steps:
    - uses: actions/checkout@v4
    - name: Get last commit message
      id: get_commit
      run: |
        TITLE=$(git log -1 --pretty=%s)
        echo "title=$TITLE" >> "$GITHUB_OUTPUT"

    - name: Check if commit is version tag (X.Y.Z)
      id: check_version
      run: |
        if [[ "${{ steps.get_commit.outputs.title }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          echo "valid=true" >> "$GITHUB_OUTPUT"
        else
          echo "valid=false" >> "$GITHUB_OUTPUT"
        fi
    - name: Setup .NET ${{ matrix.dotnet-version }}
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Test Build
      run: dotnet build --no-restore
    
    - name: Create Release Zip
      uses: thedoctor0/zip-release@master
      with:
        filename: 'Release.zip'
        exclusions: '*.git* /*.idea/* *.md *.sln global.json LICENSE'
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: Pelican-Keeper-v$${{ steps.get_commit.outputs.title }}
        release_name: Release Pelican-Keeper-v${{ steps.get_commit.outputs.title }}
    
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./Release.zip
        asset_name: Release.zip
        asset_content_type: application/zip
